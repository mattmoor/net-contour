diff --git a/vendor/github.com/projectcontour/contour/internal/certgen/certgen.go b/vendor/github.com/projectcontour/contour/internal/certgen/certgen.go
index 18692cd6..b55cc8d5 100644
--- a/vendor/github.com/projectcontour/contour/internal/certgen/certgen.go
+++ b/vendor/github.com/projectcontour/contour/internal/certgen/certgen.go
@@ -16,7 +16,6 @@
 package certgen
 
 import (
-	"context"
 	"fmt"
 	"path"
 
@@ -126,13 +125,13 @@ func WriteSecretsYAML(outputDir string, secrets []*corev1.Secret, force Overwrit
 // compact format which is compatible with Secrets generated by cert-manager.
 func WriteSecretsKube(client *kubernetes.Clientset, secrets []*corev1.Secret, force OverwritePolicy) error {
 	for _, s := range secrets {
-		if _, err := client.CoreV1().Secrets(s.Namespace).Create(context.TODO(), s, metav1.CreateOptions{}); err != nil {
+		if _, err := client.CoreV1().Secrets(s.Namespace).Create(s); err != nil {
 			if k8serrors.IsAlreadyExists(err) && force == NoOverwrite {
 				fmt.Printf("secret/%s already exists\n", s.Name)
 				return nil
 			}
 
-			if _, err := client.CoreV1().Secrets(s.Namespace).Update(context.TODO(), s, metav1.UpdateOptions{}); err != nil {
+			if _, err := client.CoreV1().Secrets(s.Namespace).Update(s); err != nil {
 				return err
 			}
 		}
diff --git a/vendor/github.com/projectcontour/contour/internal/contour/snapshot.go b/vendor/github.com/projectcontour/contour/internal/contour/snapshot.go
index e1215d7d..ea780042 100644
--- a/vendor/github.com/projectcontour/contour/internal/contour/snapshot.go
+++ b/vendor/github.com/projectcontour/contour/internal/contour/snapshot.go
@@ -28,7 +28,6 @@ func (s *SnapshotHandler) UpdateSnapshot() {
 		s.CacheHandler.ClusterCache.Contents(),
 		s.CacheHandler.RouteCache.Contents(),
 		s.CacheHandler.ListenerCache.Contents(),
-		nil,
 		s.CacheHandler.SecretCache.Contents())
 	s.SnapshotCache.SetSnapshot("contour", snapshot)
 }
diff --git a/vendor/github.com/projectcontour/contour/internal/k8s/statusupdater.go b/vendor/github.com/projectcontour/contour/internal/k8s/statusupdater.go
index 02e56186..7d450cb7 100644
--- a/vendor/github.com/projectcontour/contour/internal/k8s/statusupdater.go
+++ b/vendor/github.com/projectcontour/contour/internal/k8s/statusupdater.go
@@ -14,7 +14,6 @@
 package k8s
 
 import (
-	"context"
 	"fmt"
 
 	"github.com/sirupsen/logrus"
@@ -83,7 +82,7 @@ func (suh *StatusUpdateHandler) Start(stop <-chan struct{}) error {
 				Debug("received a status update")
 			uObj, err := suh.Clients.DynamicClient().
 				Resource(upd.Resource).
-				Namespace(upd.FullName.Namespace).Get(context.TODO(), upd.FullName.Name, metav1.GetOptions{})
+				Namespace(upd.FullName.Namespace).Get(upd.FullName.Name, metav1.GetOptions{})
 			if err != nil {
 				suh.Log.WithError(err).
 					WithField("name", upd.FullName.Name).
@@ -120,7 +119,7 @@ func (suh *StatusUpdateHandler) Start(stop <-chan struct{}) error {
 				continue
 			}
 
-			_, err = suh.Clients.DynamicClient().Resource(upd.Resource).Namespace(upd.FullName.Namespace).UpdateStatus(context.TODO(), usNewObj, metav1.UpdateOptions{})
+			_, err = suh.Clients.DynamicClient().Resource(upd.Resource).Namespace(upd.FullName.Namespace).UpdateStatus(usNewObj, metav1.UpdateOptions{})
 			if err != nil {
 				suh.Log.WithError(err).
 					WithField("name", upd.FullName.Name).
